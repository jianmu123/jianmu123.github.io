<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://jianmu123.github.io/</id>
    <title>Personal blog</title>
    <updated>2020-09-22T13:32:53.353Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://jianmu123.github.io/"/>
    <link rel="self" href="https://jianmu123.github.io/atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>https://jianmu123.github.io/images/avatar.png</logo>
    <icon>https://jianmu123.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, Personal blog</rights>
    <entry>
        <title type="html"><![CDATA[jQuery-2]]></title>
        <id>https://jianmu123.github.io/post/jquery-2/</id>
        <link href="https://jianmu123.github.io/post/jquery-2/">
        </link>
        <updated>2020-09-21T09:55:36.000Z</updated>
        <content type="html"><![CDATA[<h2 id="一jquery的样式操作">一：jQuery的样式操作</h2>
<h3 id="1设置类样式方法">1：设置类样式方法</h3>
<p>作用等同于以前的classList，可以操作类样式，注意jQuery中的类参数不要加点。</p>
<pre><code class="language-javaScript">添加类：$(&quot;div&quot;).addClass(&quot;current&quot;);//这里是给div盒子添加current的类
删除类：$(&quot;div&quot;).removeClss(&quot;current&quot;);//这里是删除div盒子current的类
切换类：$(&quot;div&quot;).toggleClss(&quot;current&quot;);//这里是切换div盒子current的类
    &lt;script&gt;
      $(function () {
        //添加类addClass
        $(&quot;div&quot;).click(function () {
          $(this).addClass(&quot;current&quot;);
        });
        //删除类removeClass
        $(&quot;div&quot;).click(function () {
          $(this).removeClass(&quot;current&quot;);
        });
        //切换类toggleClass
        $(&quot;div&quot;).click(function () {
          $(this).toggleClass(&quot;current&quot;);
        });
      });
    &lt;/script&gt;
</code></pre>
<h3 id="2jquery的类操作是对指定类进行操作不会影响原先类名但是原生js中classname会覆盖元素里面原先的类名">2:jQuery的类操作是对指定类进行操作，不会影响原先类名，但是原生js中className会覆盖元素里面原先的类名。</h3>
<p>下面做一个菜单栏案例：点击菜单后该菜单的内容显示出来，单击其他菜单，之前显示的菜单隐藏。</p>
<figure data-type="image" tabindex="1"><img src="https://jianmu123.github.io//post-images/1600683854568.png" alt="" loading="lazy"></figure>
<h2 id="二jquery效果">二：jQuery效果</h2>
<h3 id="1显示隐藏-切换showspeedeasingcallback-hidespeedeasingcallback-togglespeedeasingcallback-注意这3个方法内部有方括号所以参数都可以不写">1：显示/隐藏 /切换：show([speed],[easing],[callback])  hide([speed],[easing],[callback]) toggle([speed],[easing],[callback])。注意这3个方法内部有方括号[],所以参数都可以不写。</h3>
<figure data-type="image" tabindex="2"><img src="https://jianmu123.github.io//post-images/1600773077471.png" alt="" loading="lazy"></figure>
<h3 id="2下拉上啦切换-slidedownslideupslidetoggle-内部参数与上方一样">2：下拉/上啦/切换: slideDown,slideUp,slideToggle。内部参数与上方一样。</h3>
<h3 id="3事件切换hoveroverout">3：事件切换：hover（[over],out）</h3>
<pre><code>           over:鼠标经过元素上触发，相当于mouseenter
           out:鼠标移出此元素要触发的函数，相当于mouseleave
</code></pre>
<p>区分概念：<br>
1.mouseover与mouseout成对，mouseenter与mouseleave成对<br>
2.mouseover触发优先级高于mouseenter，mouseout触发优先级mouseleave<br>
3.在父元素上绑定mouseover和mouseout事件，子元素同样也会触发，即子元素事件会冒泡至父元素；而父元素绑定mouseenter和mouseleave事件只对父元素有效，子元素不会触发。<br>
<img src="https://jianmu123.github.io//post-images/1600780157055.png" alt="" loading="lazy"></p>
<h3 id="4淡入淡出效果fadein-fadeout-fadetoggle-fadetospeedopacity-内部参数与上方一样">4：淡入淡出效果：fadeIn（）、fadeOut()、fadeToggle()、fadeTo(speed,opacity)。内部参数与上方一样。</h3>
<p><img src="https://jianmu123.github.io//post-images/1600780522485.png" alt="" loading="lazy"><br>
<img src="https://jianmu123.github.io//post-images/1600780704256.png" alt="" loading="lazy"></p>
<h3 id="4自定义动画animateparamsspeed-easing-callback">4:自定义动画：animate(params，[speed]、[easing]、[callback])。</h3>
<p><img src="https://jianmu123.github.io//post-images/1600781058456.png" alt="" loading="lazy"><br>
<img src="https://jianmu123.github.io//post-images/1600781151512.png" alt="" loading="lazy"></p>
<h3 id="5注意以上所有动画或效果都有动画队列的问题">5：注意以上所有动画或效果都有动画队列的问题。</h3>
<p>问题：动画或则效果一旦触发就会运行，但是当我们多次触发就会造成多个动画或效果的队列问题。<br>
解决办法：在添加stop()方法，把上一个动画效果停止（谁执行了动画效果就在谁前面添加）。<br>
<img src="https://jianmu123.github.io//post-images/1600781449952.png" alt="" loading="lazy"></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[关于]]></title>
        <id>https://jianmu123.github.io/post/about/</id>
        <link href="https://jianmu123.github.io/post/about/">
        </link>
        <updated>2020-09-20T10:27:03.000Z</updated>
        <content type="html"><![CDATA[<blockquote>
<p>欢迎来到我的小站呀，很高兴遇见你！🤝</p>
</blockquote>
<h2 id="关于本站">🏠 关于本站</h2>
<p>本站是我的一个前端学习的博客，记录了我的前端学习的内容笔记，由于写博客的时候刚学jQuery，所以会从这里开始，你可以阅读我的笔记，如果可以帮助到你那我就非常开心😃。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[jQuery-1]]></title>
        <id>https://jianmu123.github.io/post/jquery-de-di-yi-tian/</id>
        <link href="https://jianmu123.github.io/post/jquery-de-di-yi-tian/">
        </link>
        <updated>2020-09-20T07:19:25.000Z</updated>
        <content type="html"><![CDATA[<p>一： jQuery的概述</p>
<h3 id="1-jquery是javascript的一个封装库里面存放了很多函数">1. jQuery是javaScript的一个封装库,里面存放了很多函数。</h3>
<h3 id="2-使用时只需调用这个库文件">2. 使用时只需调用这个库文件。</h3>
<h3 id="3-jquery主要是用来操作dom的">3. jQuery主要是用来操作DOM的。</h3>
<h3 id="4-学习jquery的本质是学习调用这些函数">4. 学习jQuery的本质是学习调用这些函数。</h3>
<h2 id="二jquery的基本使用">二：jQuery的基本使用</h2>
<h3 id="1首先官网下载jquery官网httpsjquerycom">1：首先官网下载[jQuery官网]{https://jquery.com/}</h3>
<h3 id="2符号是jquery的别称jquery中的顶级对象相当于javascript中的window对象">2：$符号是jQuery的别称，jQuery中的顶级对象，相当于javaScript中的window对象</h3>
<h3 id="3注意下列">3：注意下列：</h3>
<pre><code class="language-javaScript">//下面是jQuery入口函数
   &lt;script&gt;
      $(function () {
          //内容写这里
      });
    &lt;/script&gt;

 // 1:DOM 对象：用原生js方式获取的对象是DOM对象

   var myDiv = document.querySelector(&quot;div&quot;); //querySelector() 方法返回文档中匹配指定 CSS 选择器的一个元素。

   console.dir(myDiv); //打印所有的属性和方法

   // 2:jQuery 对象：用原生jQuery方式获取的对象是jQuery对象

   $(&quot;div&quot;);  // jQuery 对象

   console.dir($(&quot;div&quot;));

   //  从控制台可以看出2者打印的内容不同，jQuery打印了一个伪数组的形式

   // 3:jQuery对象只能使用jQuery方法,DOM对象只能使用原生javaScript属性和方法,2者不能混用
</code></pre>
<h3 id="4jquery对象和dom对象的相互转换">4：<strong>jQuery对象和DOM对象的相互转换</strong></h3>
<p>因为原生js比jQuery大，一些原生的js属性方法在jQuery中没有，所以需要把jQuery对象转换为DOM对象才可以使用。</p>
<pre><code class="language-javaScript">先用2种方式获取对象：
 var myDiv = document.querySelector(&quot;div&quot;);//DOM对象
 $(&quot;div&quot;);  // jQuery 对象
//jQuery转DOM(2种方式):
 $('div')[index];//index是索引号，因为jQuery对象是一个伪数组  
 $('div')get（index）;
//DOM转jQuery：
 $(myDiv);   
</code></pre>
<h2 id="三jquery的常用api">三：jQuery的常用API</h2>
<h3 id="1jquery基础选择器">1：jQuery基础选择器</h3>
<pre><code class="language-javaScript"> $('选择器')；//里面选择器直接写CSS选择器即可，但是要加引号。
</code></pre>
<table>
<thead>
<tr>
<th>名称</th>
<th>用法</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>ID选择器</td>
<td>$(&quot;#id&quot;)</td>
<td>获取指定的ID元素</td>
</tr>
<tr>
<td>全选选择器</td>
<td>$('*')</td>
<td>匹配所有元素</td>
</tr>
<tr>
<td>类选择器</td>
<td>$(&quot;.class&quot;)</td>
<td>获取同一类元素</td>
</tr>
<tr>
<td>标签选择器</td>
<td>$(&quot;div&quot;)</td>
<td>获取同一类标签的所有元素</td>
</tr>
<tr>
<td>并集选择器</td>
<td>$(&quot;div,p,li&quot;)</td>
<td>选取多个元素</td>
</tr>
<tr>
<td>交集选择器</td>
<td>$(&quot;li.current&quot;)</td>
<td>交集元素</td>
</tr>
</tbody>
</table>
<h4 id="2jquery设置css样式">2:jQuery设置css样式：</h4>
<pre><code class="language-javaScript"> $(&quot;div&quot;).css(&quot;属性&quot;,&quot;值&quot;);//例如：$(&quot;div&quot;).css(''background'',''red'');就把所有的div背景改为了红色
注意：这里的属性名一定要加引号

同时修改多个样式：使用对象的形式，注意这个时候属性名就不用加引号,加上也没错
$(&quot;div&quot;).css({
width:400,
height:400,
backgroundColor：&quot;red&quot;，
注意如果是复合属性就要写成驼峰命名法，如果值不是数字则必须使用引号
})
</code></pre>
<p>这个里面有一个<strong>隐式迭代</strong>的概念，他会把所有选取到的所有元素进行循环遍历，依次执行相应的方法。</p>
<h4 id="3jquery筛选选择器">3：jQuery筛选选择器</h4>
<table>
<thead>
<tr>
<th>语法</th>
<th>用法</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>:firsr</td>
<td>$('li':first)</td>
<td>获取第一个li元素</td>
</tr>
<tr>
<td>:last</td>
<td>$('li:last')</td>
<td>获取最后一个li元素</td>
</tr>
<tr>
<td>:eq(index)</td>
<td>$(<strong>&quot;li:eq(2)&quot;</strong>)</td>
<td>获取到的li元素中，选择索引号为2的元素 (注意索引号是从0开始的)</td>
</tr>
<tr>
<td>:odd</td>
<td>$(<strong>&quot;li:odd&quot;</strong>)</td>
<td>获取到的li元素中，选择索引号为奇数的元素</td>
</tr>
<tr>
<td>:even</td>
<td>$(&quot;li:even&quot;)</td>
<td>获取到的li元素中，选择索引号为偶数的元素</td>
</tr>
</tbody>
</table>
<h4 id="4筛选方法注意方法都有括号">4：筛选方法（注意方法都有括号）</h4>
<figure data-type="image" tabindex="1"><img src="https://jianmu123.github.io//post-images/1600606470845.png" alt="" loading="lazy"></figure>
<h4 id="5注意下例的写法">5：注意下例的写法：</h4>
<pre><code class="language-javaScript">//让鼠标经过div使ul显示出来,this是当前元素(即:div)
  $(&quot;div&quot;).mousemove(function () {      
        $(this).children(&quot;ul&quot;).show();
      });
 //鼠标移出就隐藏
 $(&quot;div&quot;).mouseout(function(){
    $(this).children(&quot;ul&quot;).hide();
 })
</code></pre>
]]></content>
    </entry>
</feed>